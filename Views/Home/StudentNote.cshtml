@using SchoolSystemTask.ViewModels
@model StudentNoteViewModel;

@{
    ViewBag.Title = "Students Notes";
    Layout = "_TeacherLayout";
}


<div class="container-fluid py-4">
    <h3 class="mb-4">Students Notes</h3>
    <div class="row mb-4">
        <div class="col-lg-8 col-md-6 mb-md-0 mb-4">
            <div class="card">
                <div class="card-header pb-0">
                    <div class="row">
                        <div class="col-lg-6 col-7">
                            <h6>Students Table</h6>
                            <p class="text-sm mb-0"></p>
                        </div>
                        <div class="col-lg-6 col-5 my-auto text-end"></div>
                    </div>
                </div>
                <!-- Table Section -->
                <div class="card-body px-0 pb-2">
                    <div class="table-responsive">
                        <table class="table align-items-center mb-0">
                            <thead>
                                <tr>
                                    <th> Student Name </th>
                                    <th> Note </th>
                                    <th> Type </th>
                                    <th> date </th>
                                    <th> </th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (!Model.StudentNotes.Any())
                                {
                                    <tr>
                                        <td colspan="5">There are no students notes yet.</td>
                                    </tr>
                                }
                                else
                                {
                                    @foreach (var studentNote in Model.StudentNotes)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex px-2 py-1">
                                                    <div>
                                                        <img src="/assets/new/profile-user.svg" class="avatar avatar-sm me-3"
                                                            alt="@studentNote.Student.FirstName @studentNote.Student.LastName" />
                                                    </div>
                                                    <div class="d-flex flex-column justify-content-center">
                                                        <h6 class="mb-0 text-sm">
                                                            @studentNote.Student.FirstName
                                                            @studentNote.Student.LastName
                                                        </h6>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <span class="text-xs font-weight-bold">@studentNote.Note</span>
                                            </td>

                                            <td>
                                                <span>@studentNote.NoteType.NoteTypeName</span>
                                            </td>
                                            <td>
                                                <span>@studentNote.DateTime.</span>
                                            </td>
                                            <td class="align-middle">
                                                <span class="d-inline-block" data-bs-toggle="tooltip" data-bs-placement="top"
                                                    title="Edit note" data-container="body" data-animation="true">
                                                    <a href="javascript:" class="btn btn-link p-1"
                                                        onclick="setNoteModelData(@studentNote.Id, @studentNote.NoteType.Id, '@studentNote.Note')"
                                                        data-bs-toggle="modal" data-bs-target="#EditNoteModal">
                                                        <i class="fa-solid fa-edit"></i>
                                                    </a>
                                                </span>
                                                <span class="d-inline-block" data-bs-toggle="tooltip" data-bs-placement="top"
                                                    title="Delete Note" data-container="body" data-animation="true">
                                                    <a href="javascript:fireDeleteStudentNote(@studentNote.Id)"
                                                        class="btn btn-link p-1">
                                                        <i class="fa-solid fa-trash"></i>
                                                    </a>
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                }
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <partial name="_LatestUpdates" />
    </div>

    <footer class="footer py-4">
        <div class="container-fluid">
            <div class="row align-items-center justify-content-lg-between">
                <div class="col-lg-4 mb-lg-0 mb-4">
                    <div class="copyright text-center text-sm text-muted text-lg-start">
                        ©
                        <script>
                            document.write(new Date().getFullYear());
                        </script>
                        , TaleamPro
                    </div>
                </div>
            </div>
        </div>
    </footer>
</div>

@section Modals {
    <!-- Student Note form -->
    <div class="modal fade" id="EditNoteModal" tabindex="-1" role="dialog" aria-labelledby="EditNoteModal"
        aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title font-weight-normal">
                        Edit Note
                    </h5>
                    <button type="button" class="btn-close text-dark" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form method="post" action="@Url.Action("EditStudentNote", "Home")">
                        <div class="input-group input-group-outline my-3">
                            <select class="form-control" required name="noteTypeId" id="noteTypeSelect">
                                <option disabled selected>Note Type</option>
                                @foreach (var noteType in Model.NoteTypes)
                                {
                                    <option value="@noteType.Id">@noteType.NoteTypeName</option>
                                }
                            </select>
                        </div>
                        <div class="input-group input-group-outline my-3">
                            <textarea id="noteContentTextArea" class="form-control" rows="4" name="note"
                                placeholder="Enter the note details here..." required></textarea>
                        </div>
                        <input type="number" name="studentNoteId" class="d-none" id="studentNoteId" />
                        <button type="submit" class="btn btn-primary">Submit Note</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        function fireDeleteStudentNote(id) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!",
            }).then((result) => {
                if (result.isConfirmed)
                    deleteStudentNote(id)
            });
        }
        async function deleteStudentNote(id) {
            const response = await fetch(`/api/StudentNote/${id}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            if (response.ok) {
                window.location.reload()
                // Handle success, such as updating the UI
            } else {
                // Handle other errors
                console.error("Network error:", error);
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "Something went wrong!",
                    footer: 'note has not been deleted!'
                });
            }
        }
    </script>

    <script>
        function setNoteModelData(studentNoteId, noteTypeId, noteText) {
            document.getElementById("noteTypeSelect").value = noteTypeId;
            document.getElementById("noteContentTextArea").value = noteText;
            document.getElementById("studentNoteId").value = studentNoteId;
        }
    </script>

}