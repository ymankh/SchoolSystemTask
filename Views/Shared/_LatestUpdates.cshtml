@using SchoolSystemTask.Models.StaticData
@model (int, List<ActionHistory>)

@{
    var (count, actions) = Model;
}


<div class="card h-100">
    <div class="card-header pb-0">
        <h6>Latest Updates</h6>
        <p class="text-sm">
            <i class="fa fa-arrow-up text-success" aria-hidden="true"></i>
            <span class="font-weight-bold">@count</span> this week
        </p>
    </div>
    <div class="card-body p-3">
        <div class="timeline timeline-one-side">
            @foreach (var action in actions)
            {
                var (icon, color) = GetActionIconAndColor(action.Name);

                <div class="timeline-block mb-3">
                    <span class="timeline-step">
                        <i class="material-icons @color">@icon</i>
                    </span>
                    <div class="timeline-content">
                        <h6 class="text-dark text-sm font-weight-bold mb-0">
                            @action.Description
                        </h6>
                        <p class="text-secondary font-weight-bold text-xs mt-1 mb-0">
                            @action.Date.ToString("dd MMM hh:mm tt")
                        </p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@functions {

    private (string Icon, string Color) GetActionIconAndColor(string actionName)
    {
        return actionName switch
        {
            ActionNames.CreateExam or ActionNames.UpdateExam or ActionNames.DeleteExam => ("assignment", "text-success text-gradient"),
            ActionNames.CreateStudentAbsence => ("calendar_today", "text-danger text-gradient"),
            ActionNames.CreateStudentNote or ActionNames.UpdateStudentNote or ActionNames.DeleteStudentNote => ("note", "text-warning text-gradient"),
            _ => ("person", "text-primary text-gradient"),
        };
    }

}